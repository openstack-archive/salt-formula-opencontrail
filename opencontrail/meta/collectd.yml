{%- if pillar.opencontrail is defined %}
{%- if pillar.opencontrail.control is defined %}
{%- from "opencontrail/map.jinja" import control, collector, config with context %}
local_plugin:
  contrail_apis:
    plugin: python
    template: opencontrail/files/collectd_contrail_apis.conf
    api_checks:
      bgp-session-count:
        Url: "http://{{ control.bind.address|replace('0.0.0.0', '127.0.0.1') }}:8083/Snh_ShowNeighborStatisticsReq?bgp_or_xmpp=bgp"
        XmlElement: "ShowNeighborStatisticsResp"
        ResultType: "count"
      bgp-session-up-count:
        Url: "http://{{ control.bind.address|replace('0.0.0.0', '127.0.0.1') }}:8083/Snh_ShowNeighborStatisticsReq?bgp_or_xmpp=bgp&up_or_down=up"
        XmlElement: "ShowNeighborStatisticsResp"
        ResultType: "count"
      bgp-session-down-count:
        Url: "http://{{ control.bind.address|replace('0.0.0.0', '127.0.0.1') }}:8083/Snh_ShowNeighborStatisticsReq?bgp_or_xmpp=bgp&up_or_down=down"
        XmlElement: "ShowNeighborStatisticsResp"
        ResultType: "count"
      xmpp-session-count:
        Url: "http://{{ control.bind.address|replace('0.0.0.0', '127.0.0.1') }}:8083/Snh_ShowNeighborStatisticsReq?bgp_or_xmpp=xmpp"
        XmlElement: "ShowNeighborStatisticsResp"
        ResultType: "count"
      xmpp-session-up-count:
        Url: "http://{{ control.bind.address|replace('0.0.0.0', '127.0.0.1') }}:8083/Snh_ShowNeighborStatisticsReq?bgp_or_xmpp=xmpp&up_or_down=up"
        XmlElement: "ShowNeighborStatisticsResp"
        ResultType: "count"
      xmpp-session-down-count:
        Url: "http://{{ control.bind.address|replace('0.0.0.0', '127.0.0.1') }}:8083/Snh_ShowNeighborStatisticsReq?bgp_or_xmpp=xmpp&up_or_down=down"
        XmlElement: "ShowNeighborStatisticsResp"
        ResultType: "count"
  collectd_check_local_endpoint:
    endpoint:
{%- if config.get('enabled', False) %}
      contrail-api:
        expected_code: 401
        url: "http://{{ config.bind.address|replace('0.0.0.0', '127.0.0.1') }}:{{ config.bind.api_port }}/"
      contrail-discovery:
        expected_code: 200
        url: "http://{{ config.bind.address|replace('0.0.0.0', '127.0.0.1') }}:{{ config.bind.discovery_port }}/"
{%- endif %}
{%- if collector.get('enabled', False) %}
      contrail-collector:
        expected_code: 200
        url: "http://{{ collector.bind.address|replace('0.0.0.0', '127.0.0.1') }}:{{ collector.bind.port }}/"
{%- endif %}
  collectd_processes:
    process:
      contrail-alarm-gen:
        match: 'python.*contrail-alarm-gen'
      contrail-analytics-api:
        match: 'python.*contrail-analytics-api'
      contrail-api:
        match: 'python.*contrail-api'
      contrail-collector:
        match: 'contrail-collector'
      contrail-control:
        match: 'contrail-control'
      contrail-device-manager:
        match: 'python.*contrail-device-manager'
      contrail-discovery:
        match: 'python.*contrail-discovery'
      contrail-dns:
        match: 'contrail-dns'
      contrail-ifmap-server:
        match: 'sh.*ifmap-server'
      contrail-irond:
        match: 'java.*irond'
      contrail-job-server:
        match: 'node.*jobServerStart'
      contrail-named:
        match: 'contrail-named'
      contrail-nodemgr:
        match: 'python.*contrail-nodemgr'
      contrail-query-engine:
        match: 'contrail-query-engine'
      contrail-schema:
        match: 'python.*contrail-schema'
      contrail-snmp-collector:
        match: 'python.*contrail-snmp-collector'
      contrail-supervisord:
        match: 'python.*supervisord'
      contrail-svc-monitor:
        match: 'python.*contrail-svc-monitor'
      contrail-topology:
        match: 'python.*contrail-topology'
      contrail-web-server:
        match: 'node.*webServerStart'
      zookeeper:
        match: 'java.*zookeeper.server'
      kafka-zookeeper:
        match: 'java.*kafka.Kafka'
      redis-server:
        match: 'redis-server'
      cassandra-server:
        match: 'java.*service.CassandraDaemon'
{%- elif pillar.opencontrail.compute is defined %}
{%- from "opencontrail/map.jinja" import compute with context %}
{%- if compute.get('enabled', False) %}
local_plugin:
  contrail_ifmap_elements_count:
    plugin: python
    template: opencontrail/files/collectd_contrail_ifmap_elements_count.conf
  contrail_apis:
    plugin: python
    template: opencontrail/files/collectd_contrail_apis.conf
    api_checks:
      vrouter-flows-active:
        Url: "http://{{ compute.interface.address|replace('0.0.0.0', '127.0.0.1') }}:8085/Snh_AgentStatsReq"
        XmlElement: "FlowStatsResp"
        ResultType: "flow_active"
      vrouter-flows-aged:
        Url: "http://{{ compute.interface.address|replace('0.0.0.0', '127.0.0.1') }}:8085/Snh_AgentStatsReq"
        XmlElement: "FlowStatsResp"
        ResultType: "flow_aged"
      vrouter-flows-created:
        Url: "http://{{ compute.interface.address|replace('0.0.0.0', '127.0.0.1') }}:8085/Snh_AgentStatsReq"
        XmlElement: "FlowStatsResp"
        ResultType: "flow_created"
      vrouter-flows-composite-invalid-interface:
        Url: "http://{{ compute.interface.address|replace('0.0.0.0', '127.0.0.1') }}:8085/Snh_KDropStatsReq"
        XmlElement: "KDropStatsResp"
        ResultType: "ds_invalid_if"
      vrouter-flows-discard:
        Url: "http://{{ compute.interface.address|replace('0.0.0.0', '127.0.0.1') }}:8085/Snh_KDropStatsReq"
        XmlElement: "KDropStatsResp"
        ResultType: "ds_discard"
      vrouter-flows-flow-action-drop:
        Url: "http://{{ compute.interface.address|replace('0.0.0.0', '127.0.0.1') }}:8085/Snh_KDropStatsReq"
        XmlElement: "KDropStatsResp"
        ResultType: "ds_flow_action_drop"
      vrouter-flows-flow-queue-limit-exceeded:
        Url: "http://{{ compute.interface.address|replace('0.0.0.0', '127.0.0.1') }}:8085/Snh_KDropStatsReq"
        XmlElement: "KDropStatsResp"
        ResultType: "ds_flow_queue_limit_exceeded"
      vrouter-flows-flow-table-full:
        Url: "http://{{ compute.interface.address|replace('0.0.0.0', '127.0.0.1') }}:8085/Snh_KDropStatsReq"
        XmlElement: "KDropStatsResp"
        ResultType: "ds_flow_table_full"
      vrouter-flows-frag-err:
        Url: "http://{{ compute.interface.address|replace('0.0.0.0', '127.0.0.1') }}:8085/Snh_KDropStatsReq"
        XmlElement: "KDropStatsResp"
        ResultType: "ds_frag_err"
      vrouter-flows-invalid-label:
        Url: "http://{{ compute.interface.address|replace('0.0.0.0', '127.0.0.1') }}:8085/Snh_KDropStatsReq"
        XmlElement: "KDropStatsResp"
        ResultType: "ds_invalid_label"
      vrouter-flows-invalid-nh:
        Url: "http://{{ compute.interface.address|replace('0.0.0.0', '127.0.0.1') }}:8085/Snh_KDropStatsReq"
        XmlElement: "KDropStatsResp"
        ResultType: "ds_invalid_nh"
      vrouter-dns-xmpp:
        Url: "http://{{ compute.interface.address|replace('0.0.0.0', '127.0.0.1') }}:8085/Snh_AgentDnsXmppConnectionStatusReq"
        XmlElement: "AgentXmppDnsData"
        State: "Established"
      vrouter-lls:
        Url: "http://{{ compute.interface.address|replace('0.0.0.0', '127.0.0.1') }}:8085/Snh_LinkLocalServiceInfo"
        XmlElement: "LinkLocalServiceData"
      vrouter-xmpp:
        Url: "http://{{ compute.interface.address|replace('0.0.0.0', '127.0.0.1') }}:8085/Snh_AgentXmppConnectionStatusReq"
        XmlElement: "AgentXmppData"
        State: "Established"
  collectd_check_local_endpoint:
    endpoint:
      contrail-node-manager:
        expected_code: 200
        url: "http://127.0.0.1:8102/"
      contrail-vrouter:
        expected_code: 200
        url: "http://127.0.0.1:8085/"
  collectd_processes:
    process:
      contrail-nodemgr:
        match: 'python.*contrail-nodemgr'
      contrail-supervisord:
        match: 'python.*supervisord'
      contrail-vrouter-agent:
        match: 'contrail-vrouter-agent'
{%- endif %}
{%- endif %}
{%- endif %}
